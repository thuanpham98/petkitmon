{"version":3,"mappings":"0FAEO,MAAMA,CAAkB,CAC7B,MAAa,oBAAqB,CAC5B,IAGF,OAAO,MAFM,MAAMC,EAAM,IAAI,gCAAgC,GAE3C,WACXC,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,CACF,CCTO,MAAMC,CAAsC,CACzC,QAER,aAAc,CACP,aAAU,IAAIH,CACrB,CACA,MAAa,kBAA4C,CACvD,MAAMI,EAAO,MAAM,KAAK,QAAQ,mBAAmB,EACnD,eAAQ,IAAIA,CAAI,EACT,EACT,CACF,CCVO,MAAMC,UAAsBC,CAAS,CAC1B,IAEA,MAEhB,aAAc,CACN,QACD,SAAM,OAAO,eAAe,EAG5B,WAAQ,IAAIH,EAGXF,EAAA,SAAS,QAAU,IAAM,GACjC,CAEO,SAAkB,CAChB,YAAK,IAAI,aAAe,eACjC,CACF,ogCCnBY,IAAAM,OAEVA,EAAA,KAAO,IAEPA,EAAA,cAAgB,kBAJNA,OAAA,ICJL,MAAMC,CAAY,CACvB,OAAO,KAAe,gCACtB,OAAO,SAAmB,aAC5B,CCEA,MAAMC,EAAMC,EAAA,KAAK,IAAMC,EAAA,WAAO,uBAAO,EAAC,sBAEhCC,EAAeF,EAAA,KAAK,UAAM,OAAO,uBAAkB,EAAC,sBACpDG,EAAoBH,EAAA,KAAK,IAAMC,EAAA,WAAO,uBAAwB,EAAC,sBAE9D,SAASG,GAAkB,CACzB,OAAAC,EACL,CACE,CACE,KAAMR,EAAY,KAClB,QACES,MAACC,WACC,UAAAD,MAACP,GAAI,GACP,EAEF,SAAU,CACR,CACE,MAAO,GACP,QACEO,MAACC,WACC,UAAAD,MAACJ,GAAa,GAChB,CAEJ,EACA,CACE,KAAML,EAAY,cAClB,QACES,MAACC,WACC,UAAAD,MAACH,GAAkB,GACrB,CAEJ,CACF,CACF,CACF,EACA,CAAE,SAAUL,EAAY,QAAS,EAErC,CCnCyB,IAAIU,EAA6B,MACxD,IAAIb,CACN,EACA,MAAMc,EAASL,EAAgB,EAE/BM,EAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,OACpDJ,MAACK,GAAe,OAAAF,EAAgB,CAClC","names":["PokemonController","axios","error","PokemonRepository","resp","AppRepository","RdModule","NavlinkPath","Environment","App","lazy","__vitePreload","PokemonsPage","PokemonDetailPage","appRouterConfig","createBrowserRouter","jsx","Suspense","RdModulesManager","router","ReactDOM","RouterProvider"],"sources":["../src/infrastructures/pokemon-api/PokemonController.ts","../src/applications/repositories/PokemonRepository.ts","../src/applications/services/app-repository.ts","../src/applications/services/router-config.ts","../src/applications/services/environment.ts","../src/router.tsx","../src/main.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport class PokemonController {\r\n  public async getListPokemonType() {\r\n    try {\r\n      const resp = await axios.get(\"https://pokeapi.co/api/v2/type\");\r\n\r\n      return await resp.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n","import { IPokemon, PokemonsType } from \"@/domains/pokemons\";\r\nimport { PokemonController } from \"@/infrastructures/pokemon-api/PokemonController\";\r\n\r\nexport class PokemonRepository implements IPokemon {\r\n  private _client: PokemonController;\r\n\r\n  constructor() {\r\n    this._client = new PokemonController();\r\n  }\r\n  public async listPokemonTypes(): Promise<PokemonsType[]> {\r\n    const resp = await this._client.getListPokemonType();\r\n    console.log(resp);\r\n    return [];\r\n  }\r\n}\r\n","import { RdModule } from \"@radts/reactjs\";\r\nimport axios from \"axios\";\r\nimport { PokemonRepository } from \"../repositories/PokemonRepository\";\r\n\r\nexport class AppRepository extends RdModule {\r\n  public readonly key: symbol;\r\n\r\n  public readonly lotus: PokemonRepository;\r\n\r\n  constructor() {\r\n    super();\r\n    this.key = Symbol(\"AppRepository\");\r\n\r\n    // core bank\r\n    this.lotus = new PokemonRepository();\r\n\r\n    // asios\r\n    axios.defaults.timeout = 120 * 1000;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.key.description ?? \"AppRepository\";\r\n  }\r\n}\r\n","/**\r\n * NalinkPath is enum hold all router in app\r\n */\r\n\r\nexport enum NavlinkPath {\r\n  // root\r\n  root = `/`,\r\n\r\n  detailPokemon = \"/detail-pokemon\",\r\n}\r\n","export class Environment {\r\n  static host: string = import.meta.env.PETKITMON_HOST;\r\n  static basePath: string = import.meta.env.PETKITMON_BASE_PATH;\r\n}\r\n","import { Suspense, lazy } from \"react\";\r\nimport { createBrowserRouter } from \"react-router-dom\";\r\nimport { NavlinkPath } from \"./applications/services/router-config\";\r\nimport { Environment } from \"./applications/services/environment\";\r\n\r\nconst App = lazy(() => import(\"@/App\"));\r\n\r\nconst PokemonsPage = lazy(() => import(\"@/pages/pokemons\"));\r\nconst PokemonDetailPage = lazy(() => import(\"@/pages/detail-pokemon\"));\r\n\r\nexport function appRouterConfig() {\r\n  return createBrowserRouter(\r\n    [\r\n      {\r\n        path: NavlinkPath.root,\r\n        element: (\r\n          <Suspense>\r\n            <App />\r\n          </Suspense>\r\n        ),\r\n        children: [\r\n          {\r\n            index: true,\r\n            element: (\r\n              <Suspense>\r\n                <PokemonsPage />\r\n              </Suspense>\r\n            ),\r\n          },\r\n          {\r\n            path: NavlinkPath.detailPokemon,\r\n            element: (\r\n              <Suspense>\r\n                <PokemonDetailPage />\r\n              </Suspense>\r\n            ),\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    { basename: Environment.basePath },\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport { RdModule, RdModulesManager } from \"@radts/reactjs\";\r\nimport { AppRepository } from \"./applications/services/app-repository\";\r\nimport { appRouterConfig } from \"./router\";\r\nimport { RouterProvider } from \"react-router-dom\";\r\n\r\nexport const rdManager = new RdModulesManager<RdModule>().use(\r\n  new AppRepository(),\r\n);\r\nconst router = appRouterConfig();\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\r\n  <RouterProvider router={router} />,\r\n);\r\n"],"file":"petkitmon.js"}